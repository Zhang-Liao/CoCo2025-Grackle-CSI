YES

Problem:
 b() -> c()
 a() -> a()

Proof:
 sorted: (order-sorted)
 0:b() -> c()
 1:a() -> a()
 -----
 sorts
   [0>1]
 sort attachment (non-strict)
   b : 0
   c : 1
   a : 2
 -----
 0:b() -> c()
   AT confluence processor
    Complete TRS T' of input TRS:
    b() -> c()
    
     T' = (P union S) with
    
     TRS P:
    
     TRS S:b() -> c()
    
    S is left-linear and P is reversible.
    
     CP(S,S) = 
    
     CP(S,P union P^-1) = 
    
    
     PCP_in(P union P^-1,S) = 
    
    
    We have to check termination of S:
    
    Matrix Interpretation Processor: dim=1
     
     interpretation:
      [c] = 0,
      
      [b] = 1
     orientation:
      b() = 1 >= 0 = c()
     problem:
      
     Qed
 
 
 1:a() -> a()
   AT confluence processor
    Complete TRS T' of input TRS:
    a() -> a()
    
     T' = (P union S) with
    
     TRS P:a() -> a()
    
     TRS S:
    
    S is left-linear and P is reversible.
    
     CP(S,S) = 
    
     CP(S,P union P^-1) = 
    
    
     PCP_in(P union P^-1,S) = 
    
    
    We have to check termination of S:
    
    Qed
  

