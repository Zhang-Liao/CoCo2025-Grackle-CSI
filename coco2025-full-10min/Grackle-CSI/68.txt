YES

Problem:
 F(x,y) -> c(A())
 G(x) -> x
 h(x) -> c(x)

Proof:
 sorted: (order-sorted)
 0:F(x,y) -> c(A())
 1:G(x) -> x
 2:h(x) -> c(x)
 -----
 sorts
   [0>3, 0>8, 0>9, 1>7, 2>3, 3>4, 4>5, 4>6]
 sort attachment (non-strict)
   F : 8 x 9 -> 0
   c : 4 -> 3
   A : 5
   G : 7 -> 1
   h : 6 -> 2
 -----
 0:F(x,y) -> c(A())
   AT confluence processor
    Complete TRS T' of input TRS:
    F(x,y) -> c(A())
    
     T' = (P union S) with
    
     TRS P:
    
     TRS S:F(x,y) -> c(A())
    
    S is left-linear and P is reversible.
    
     CP(S,S) = 
    
     CP(S,P union P^-1) = 
    
    
     PCP_in(P union P^-1,S) = 
    
    
    We have to check termination of S:
    
    Matrix Interpretation Processor: dim=1
     
     interpretation:
      [A] = 0,
      
      [F](x0, x1) = 4x0 + 4x1 + 4,
      
      [c](x0) = 4x0
     orientation:
      F(x,y) = 4x + 4y + 4 >= 0 = c(A())
     problem:
      
     Qed
 
 
 1:G(x) -> x
   AT confluence processor
    Complete TRS T' of input TRS:
    G(x) -> x
    
     T' = (P union S) with
    
     TRS P:
    
     TRS S:G(x) -> x
    
    S is left-linear and P is reversible.
    
     CP(S,S) = 
    
     CP(S,P union P^-1) = 
    
    
     PCP_in(P union P^-1,S) = 
    
    
    We have to check termination of S:
    
    Matrix Interpretation Processor: dim=1
     
     interpretation:
      [G](x0) = x0 + 4
     orientation:
      G(x) = x + 4 >= x = x
     problem:
      
     Qed
 
 
 2:h(x) -> c(x)
   AT confluence processor
    Complete TRS T' of input TRS:
    h(x) -> c(x)
    
     T' = (P union S) with
    
     TRS P:
    
     TRS S:h(x) -> c(x)
    
    S is left-linear and P is reversible.
    
     CP(S,S) = 
    
     CP(S,P union P^-1) = 
    
    
     PCP_in(P union P^-1,S) = 
    
    
    We have to check termination of S:
    
    Matrix Interpretation Processor: dim=1
     
     interpretation:
      [h](x0) = 4x0 + 1,
      
      [c](x0) = 4x0
     orientation:
      h(x) = 4x + 1 >= 4x = c(x)
     problem:
      
     Qed


